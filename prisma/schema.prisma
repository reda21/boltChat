generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String    @unique
  password      String
  avatar        String?
  status        String    @default("offline")
  bio           String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  groupMemberships GroupMember[]
  followers        Follow[]   @relation("Following")
  following        Follow[]   @relation("Followers")
}

model Message {
  id          String    @id @default(uuid())
  content     String
  senderId    String
  receiverId  String?
  groupId     String?
  createdAt   DateTime  @default(now())
  
  sender      User      @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User?     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  group       Group?    @relation(fields: [groupId], references: [id])
}

model Group {
  id          String    @id @default(uuid())
  name        String
  avatar      String?
  createdAt   DateTime  @default(now())
  
  messages    Message[]
  members     GroupMember[]
}

model GroupMember {
  id        String    @id @default(uuid())
  userId    String
  groupId   String
  role      String    @default("member")
  joinedAt  DateTime  @default(now())
  
  user      User      @relation(fields: [userId], references: [id])
  group     Group     @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

model Follow {
  id          String    @id @default(uuid())
  followerId  String
  followingId String
  createdAt   DateTime  @default(now())
  
  follower    User      @relation("Following", fields: [followerId], references: [id])
  following   User      @relation("Followers", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}